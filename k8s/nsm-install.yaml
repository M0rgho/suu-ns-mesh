---
apiVersion: v1
kind: Namespace
metadata:
  name: nsm-system
---
# NSM Custom Resource Definitions
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkservices.networkservicemesh.io
spec:
  group: networkservicemesh.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                payload:
                  type: string
                matches:
                  type: array
                  items:
                    type: object
                    properties:
                      sourceSelector:
                        type: object
                        additionalProperties:
                          type: string
                      routes:
                        type: array
                        items:
                          type: object
                          properties:
                            destination:
                              type: string
            status:
              type: object
  scope: Namespaced
  names:
    plural: networkservices
    singular: networkservice
    kind: NetworkService
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkserviceendpoints.networkservicemesh.io
spec:
  group: networkservicemesh.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                networkServiceNames:
                  type: array
                  items:
                    type: string
                networkServiceLabels:
                  type: object
                  additionalProperties:
                    type: string
                url:
                  type: string
            status:
              type: object
  scope: Namespaced
  names:
    plural: networkserviceendpoints
    singular: networkserviceendpoint
    kind: NetworkServiceEndpoint
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkserviceclients.networkservicemesh.io
spec:
  group: networkservicemesh.io
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                networkServiceName:
                  type: string
                selector:
                  type: object
                  properties:
                    matchLabels:
                      type: object
                      additionalProperties:
                        type: string
            status:
              type: object
  scope: Namespaced
  names:
    plural: networkserviceclients
    singular: networkserviceclient
    kind: NetworkServiceClient
---
# RBAC for NSM Registry
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsm-registry
  namespace: nsm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nsm-registry
rules:
  - apiGroups: ['networkservicemesh.io']
    resources: ['*']
    verbs: ['*']
  - apiGroups: ['']
    resources: ['nodes', 'services', 'endpoints']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['get', 'list', 'watch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nsm-registry
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-registry
subjects:
  - kind: ServiceAccount
    name: nsm-registry
    namespace: nsm-system
---
# RBAC for NSM Node Manager
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nsm-node
  namespace: nsm-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nsm-node
rules:
  - apiGroups: ['networkservicemesh.io']
    resources: ['*']
    verbs: ['*']
  - apiGroups: ['']
    resources: ['nodes', 'pods', 'services', 'endpoints']
    verbs: ['get', 'list', 'watch', 'create', 'update', 'patch']
  - apiGroups: ['apps']
    resources: ['daemonsets', 'deployments']
    verbs: ['get', 'list', 'watch']
  - apiGroups: ['apiextensions.k8s.io']
    resources: ['customresourcedefinitions']
    verbs: ['get', 'list', 'watch']
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nsm-node
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nsm-node
subjects:
  - kind: ServiceAccount
    name: nsm-node
    namespace: nsm-system
---
# NSM Registry Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nsm-registry
  namespace: nsm-system
  labels:
    app: nsm-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nsm-registry
  template:
    metadata:
      labels:
        app: nsm-registry
    spec:
      serviceAccount: nsm-registry
      containers:
        - name: nsm-registry
          image: ghcr.io/networkservicemesh/ci/cmd-registry-k8s:e670934
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5002
              name: registry
          env:
            - name: NSM_LOG_LEVEL
              value: 'INFO'
            - name: NSM_LISTEN_ON
              value: 'tcp://0.0.0.0:5002'
            - name: NSM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SPIFFE_ENDPOINT_SOCKET
              value: 'unix:///run/spire/sockets/agent.sock'
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
          resources:
            requests:
              cpu: 100m
              memory: 64Mi
            limits:
              cpu: 200m
              memory: 128Mi
      volumes:
        - name: spire-agent-socket
          emptyDir: {}
---
# NSM Registry Service
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: nsm-system
  labels:
    app: nsm-registry
spec:
  selector:
    app: nsm-registry
  ports:
    - name: registry
      protocol: TCP
      port: 5002
      targetPort: 5002
  type: ClusterIP
---
# NSM Node Manager DaemonSet
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nsm-node
  namespace: nsm-system
  labels:
    app: nsm-node
spec:
  selector:
    matchLabels:
      app: nsm-node
  template:
    metadata:
      labels:
        app: nsm-node
    spec:
      serviceAccount: nsm-node
      hostNetwork: true
      hostPID: true
      containers:
        - name: nsm-node
          image: ghcr.io/networkservicemesh/ci/cmd-nsmgr:3db07a0
          imagePullPolicy: IfNotPresent
          env:
            - name: NSM_LOG_LEVEL
              value: 'INFO'
            - name: NSM_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: NSM_REGISTRY_URL
              value: 'tcp://registry.nsm-system.svc.cluster.local:5002'
            - name: NSM_LISTEN_ON
              value: 'unix:///var/lib/networkservicemesh/nsm.sock'
            - name: NSM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: SPIFFE_ENDPOINT_SOCKET
              value: 'unix:///run/spire/sockets/agent.sock'
          volumeMounts:
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
            - name: nsm-socket
              mountPath: /var/lib/networkservicemesh
            - name: kubelet-socket
              mountPath: /var/lib/kubelet
              readOnly: true
            - name: cgroup
              mountPath: /host/sys/fs/cgroup
              readOnly: true
            - name: proc
              mountPath: /host/proc
              readOnly: true
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 150m
              memory: 64Mi
            limits:
              cpu: 300m
              memory: 128Mi
      volumes:
        - name: spire-agent-socket
          emptyDir: {}
        - name: nsm-socket
          hostPath:
            path: /var/lib/networkservicemesh
            type: DirectoryOrCreate
        - name: kubelet-socket
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: cgroup
          hostPath:
            path: /sys/fs/cgroup
            type: Directory
        - name: proc
          hostPath:
            path: /proc
            type: Directory
---
# NSM ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: nsm-config
  namespace: nsm-system
data:
  config.yaml: |
    registry_server_url: "tcp://registry.nsm-system.svc.cluster.local:5002"
    excluded_prefixes:
      - "127.0.0.0/8"
      - "169.254.0.0/16"
      - "224.0.0.0/4"
      - "fe80::/10"
